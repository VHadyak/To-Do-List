{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://to-do-list/webpack/bootstrap","webpack://to-do-list/webpack/runtime/global","webpack://to-do-list/webpack/runtime/publicPath","webpack://to-do-list/./src/modules/tasks.js","webpack://to-do-list/./src/modules/idTaskManager.js","webpack://to-do-list/./src/modules/dom.js","webpack://to-do-list/./src/modules/projectRender.js","webpack://to-do-list/./src/modules/projects.js","webpack://to-do-list/./node_modules/date-fns/locale/en-US/_lib/formatDistance.js","webpack://to-do-list/./node_modules/date-fns/locale/_lib/buildFormatLongFn.js","webpack://to-do-list/./node_modules/date-fns/locale/en-US/_lib/formatLong.js","webpack://to-do-list/./node_modules/date-fns/locale/en-US/_lib/formatRelative.js","webpack://to-do-list/./node_modules/date-fns/locale/_lib/buildLocalizeFn.js","webpack://to-do-list/./node_modules/date-fns/locale/_lib/buildMatchFn.js","webpack://to-do-list/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","webpack://to-do-list/./node_modules/date-fns/locale/en-US.js","webpack://to-do-list/./node_modules/date-fns/locale/en-US/_lib/localize.js","webpack://to-do-list/./node_modules/date-fns/locale/en-US/_lib/match.js","webpack://to-do-list/./node_modules/date-fns/_lib/defaultOptions.js","webpack://to-do-list/./node_modules/date-fns/constants.js","webpack://to-do-list/./node_modules/date-fns/constructFrom.js","webpack://to-do-list/./node_modules/date-fns/toDate.js","webpack://to-do-list/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack://to-do-list/./node_modules/date-fns/startOfDay.js","webpack://to-do-list/./node_modules/date-fns/getDayOfYear.js","webpack://to-do-list/./node_modules/date-fns/differenceInCalendarDays.js","webpack://to-do-list/./node_modules/date-fns/_lib/normalizeDates.js","webpack://to-do-list/./node_modules/date-fns/startOfYear.js","webpack://to-do-list/./node_modules/date-fns/startOfWeek.js","webpack://to-do-list/./node_modules/date-fns/startOfISOWeek.js","webpack://to-do-list/./node_modules/date-fns/getISOWeekYear.js","webpack://to-do-list/./node_modules/date-fns/getISOWeek.js","webpack://to-do-list/./node_modules/date-fns/startOfISOWeekYear.js","webpack://to-do-list/./node_modules/date-fns/getWeekYear.js","webpack://to-do-list/./node_modules/date-fns/getWeek.js","webpack://to-do-list/./node_modules/date-fns/startOfWeekYear.js","webpack://to-do-list/./node_modules/date-fns/_lib/addLeadingZeros.js","webpack://to-do-list/./node_modules/date-fns/_lib/format/lightFormatters.js","webpack://to-do-list/./node_modules/date-fns/_lib/format/formatters.js","webpack://to-do-list/./node_modules/date-fns/_lib/format/longFormatters.js","webpack://to-do-list/./node_modules/date-fns/_lib/protectedTokens.js","webpack://to-do-list/./node_modules/date-fns/isValid.js","webpack://to-do-list/./node_modules/date-fns/isDate.js","webpack://to-do-list/./node_modules/date-fns/format.js","webpack://to-do-list/./node_modules/date-fns/endOfWeek.js","webpack://to-do-list/./node_modules/date-fns/addDays.js","webpack://to-do-list/./src/modules/datesRender.js","webpack://to-do-list/./src/modules/events.js","webpack://to-do-list/./src/modules/navigation.js","webpack://to-do-list/./src/modules/completedTasksRender.js","webpack://to-do-list/./src/modules/initialize.js","webpack://to-do-list/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// Module for handling tasks\n\nimport { displayTask, updateTaskDOM } from \"./dom.js\";\nimport { checkProject, projectArr } from \"./projects.js\";\nimport { getNextId } from \"./idTaskManager.js\";\n\nexport const taskArr = JSON.parse(localStorage.getItem(\"tasks\")) || [];\nexport const completedArr = JSON.parse(localStorage.getItem(\"completed\")) || [];  // Array for storing completed tasks\nclass Task {\n  constructor(title, description, date, priority, path, projectID = 0) { \n    this.title = title;\n    this.description = description;\n    this.date = date;\n    this.priority = priority;\n    this.path = path;\n    this.id = getNextId();\n    // Use this for handling identical named projects. If task id NaN, then assign 0\n    this.projectID = isNaN(Number(projectID)) ? 0 : Number(projectID); \n  };\n};\n\nexport function createTask(title, description, date, priority, path, projectID) {\n  const task = new Task(title, description, date, priority, path, projectID);\n  checkProject(projectID, task);     // Check if project exists or not while creating a task\n  taskArr.push(task);        \n\n  localStorage.setItem(\"tasks\", JSON.stringify(taskArr));\n  return task;\n};\n\nexport function deleteTask(item) {\n  const taskUI = item.closest(\".task\"); \n  const taskID = Number(taskUI.dataset.id);\n  const taskIndex = taskArr.findIndex(task => task.id === taskID);\n  const task = taskArr[taskIndex];\n\n  taskArr.splice(taskIndex, 1);\n  deleteFromProjectArr(task, taskID);\n  \n  removeTaskUI(taskID);\n  localStorage.setItem(\"tasks\", JSON.stringify(taskArr));\n};\n\nfunction updateTaskData(task, title, description, date, priority, path) {\n  task.title = title;\n  task.description = description;\n  task.date = date;\n  task.priority = priority;\n  task.path = path;\n};\n\n// Remove task UI with assigned date if current date section doesn't match user's input\nfunction handleDateChange(task, oldDate, li) {\n  li.forEach(item => {\n    if (item.classList.contains(\"item-highlight\")) {\n      if (oldDate !== task.date) {\n        removeTaskUI(task.id);\n      };\n    };\n  });\n};\n\nfunction updateTaskUI(taskID, title, date, priority) {\n  const taskUI = document.querySelector(`.task[data-id=\"${taskID}\"]`);\n  if (taskUI) {\n    updateTaskDOM(title, date, priority, taskID);\n  };\n};\n\nfunction removeTaskUI(taskID) {\n  const taskUI = document.querySelector(`.task[data-id='${taskID}']`);\n  if (taskUI) {\n    taskUI.remove();\n  };\n};\n\n// Date section has a highlighter\nfunction isDateSectionHighlighted(li) {\n  const highlightedSections = Array.from(li).filter(item => item.classList.contains(\"item-highlight\"));\n  return highlightedSections.length > 0;\n};\n\n// Update task\nexport function editTask(title, description, date, priority, path, newProjectID, taskID) {\n  const index = taskArr.findIndex(task => task.id === Number(taskID));\n  const task = taskArr[index];\n  const oldProjectID = task.projectID;\n  const oldDate = task.date;\n\n  updateTaskData(task, title, description, date, priority, path);\n\n  const li = document.querySelectorAll(\"li:not(:first-child):not(:last-child)\"); // Get only date sections\n  const isSectionHighlighted = isDateSectionHighlighted(li);\n\n  manageTask(task, newProjectID, oldProjectID, isSectionHighlighted);\n  handleDateChange(task, oldDate, li);\n  \n  updateTaskUI(taskID, title, date, priority);\n  \n  localStorage.setItem(\"tasks\", JSON.stringify(taskArr));\n  localStorage.setItem(\"projects\", JSON.stringify(projectArr));\n};\n\n// Remove task UI/object if there are no matches with the project\nfunction manageTask(task, newProjectID, oldProjectID, isHighlighted) {\n  const projectContainer = document.querySelector(\"#project-container\");\n  const hasProject = projectContainer.querySelector(\".project\");\n  \n  if (task.projectID !== newProjectID) {\n    const newProject = projectArr.find(project => project.id === Number(newProjectID));\n    const oldProject = projectArr.find(project => project.id === task.projectID);\n\n    // Don't display Task UI if path of task doesn't match with currently selected project\n    if (!isHighlighted) {     // If project is highlighted and not other section\n      if (oldProjectID !== Number(newProjectID) || oldProject.name !== task.path) {\n        removeTaskUI(task.id);\n      };\n    };\n\n    // Remove from old project\n    if (oldProject && hasProject) {\n      const taskIndexInOldProject = oldProject.items.findIndex(t => t.id === Number(task.id));\n      if (taskIndexInOldProject !== -1) {\n        oldProject.items.splice(taskIndexInOldProject, 1);\n      };\n    };\n\n    // Add to new project\n    if (newProject && !newProject.items.some(project => project.id === Number(task.id))) {\n      newProject.addTask(task);\n      task.projectID = Number(newProjectID);\n    };\n  };\n};\n\n// Track tasks that have been completed/marked\nexport function markAsCompleteTask(checkbox) {\n  const taskUI = checkbox.closest(\".task\");\n  const taskID = Number(taskUI.dataset.id);\n  const taskIndex = taskArr.findIndex(task => task.id === Number(taskID));\n  const taskObj = taskArr[taskIndex];\n  \n  if (checkbox.checked) {\n    completedArr.push(taskObj);\n    setTimeout(() => {\n      taskUI.remove();\n    }, 300);\n  };\n\n  deleteFromProjectArr(taskObj, taskID);\n  taskArr.splice(taskIndex, 1);                             \n  localStorage.setItem(\"tasks\", JSON.stringify(taskArr));\n  localStorage.setItem(\"completed\", JSON.stringify(completedArr));\n};\n\n// If project/inbox has the task, remove that task from storages\nfunction deleteFromProjectArr(taskObj, taskID) {\n  const projectIndex = projectArr.findIndex(p => p.id === taskObj.projectID);\n  if (projectIndex !== -1) {\n    const project = projectArr[projectIndex];\n    const projectTaskIndex = project.items.findIndex(task => task.id === taskID);\n    project.items.splice(projectTaskIndex, 1);\n  };\n  localStorage.setItem(\"tasks\", JSON.stringify(taskArr));\n  localStorage.setItem(\"projects\", JSON.stringify(projectArr));\n};\n\n// Load all tasks that have been created, after browser refresh\nexport function loadTasks() {\n  const storedTasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n\n  taskArr.length = 0;\n  \n  storedTasks.forEach(taskData => {\n    const task = Object.assign(new Task(), taskData);\n    taskArr.push(task);\n    displayTask(task); \n  });\n};","// Module for tracking tasks with id \n\n// Get a unique id for a task\nexport function getNextId() {\n  const storedTasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n  const existingIds = storedTasks.map(task => task.id);\n\n  // Check if there duplicate ids\n  let newId;\n  do {\n    newId = Math.floor(Math.random() * 10000); \n  } while (existingIds.includes(newId));\n\n  return newId; \n};\n","// Module for manipulating DOM\n\nimport { projectArr } from \"./projects.js\";\nimport { taskArr } from \"./tasks.js\";\nimport { renderProjectTasks } from \"./projectRender.js\";\n\nimport actionImg from \"../assets/images/actions.svg\";\nimport actionImgDark from \"../assets/images/actions-dark.svg\"\n\nexport const projectContainer = document.querySelector(\"div#project-container\");\nexport const taskContainer = document.querySelector(\"div#task-container\");\nconst createTaskBtn = document.querySelector(\"#clickTask\");\nconst contentWrapper = document.querySelector(\"div.content-wrapper\");\nconst flexTaskContainer = document.querySelector(\"div.flex-task\");\n\n// Update options/paths to select input\nexport function updateSelectOptions() {\n  const selectPath = document.querySelector(\"dialog.task-dialog select#path\");\n  selectPath.innerHTML = \"\"; \n  \n  projectArr.forEach((project) => {\n    const optionElement = document.createElement(\"option\");\n    optionElement.value = project.name;\n    optionElement.id = project.id;\n    optionElement.textContent = project.name;\n    selectPath.appendChild(optionElement);\n  });\n};\n\n// In Completed section, display tasks without Edit, Delete and Create buttons\nexport function modifyTaskFeatures() {\n  const buttons = document.querySelectorAll(\".task .drop-up-wrapper\");\n  const checkboxes = document.querySelectorAll(\".checkTask\");\n  let deleteAllBtn = document.querySelector(\".deleteAll\");\n \n  // Check if delete all button exists\n  if (!deleteAllBtn) {\n    deleteAllBtn = document.createElement(\"button\");\n    deleteAllBtn.classList.add(\"deleteAll\");\n    deleteAllBtn.textContent = \"Delete All\";\n\n    if (contentWrapper && createTaskBtn) {\n      flexTaskContainer.insertBefore(deleteAllBtn, createTaskBtn);  // Insert before the 'Create Task' button\n    };\n  } else {\n    deleteAllBtn.style.display = \"block\";\n  };\n\n  // Disable custom checkbox\n  checkboxes.forEach(checkbox => {\n    if (checkbox && checkbox.classList.contains(\"checkTask\")) {\n      const customCheckbox = checkbox.nextElementSibling; \n      \n      if (customCheckbox) {\n        checkbox.checked = true;  \n        checkbox.disabled = true; \n        // Disable the custom checkbox\n        customCheckbox.classList.add(\"checkbox-disabled\");\n      };\n    };\n  });\n\n  buttons.forEach(btn => {\n    btn.remove();\n  });\n\n  if (createTaskBtn) {\n    createTaskBtn.style.display = \"none\";\n  };\n};\n\n// Hide \"delete\", show \"create\" btn when switched off from \"Completed section\"\nexport function showTaskBtn() {\n  const deleteAllBtn = document.querySelector(\".deleteAll\");\n  if (createTaskBtn) {\n    createTaskBtn.style.display = \"block\"; \n  };\n  if (deleteAllBtn) {\n    deleteAllBtn.remove();\n  };\n};\n\n// Display project UI\nexport function displayProject(project) {\n  const projectEl = document.createElement(\"div\");\n  const projectTitle = document.createElement(\"div\");\n\n  projectEl.classList.add(\"project\");                \n  projectTitle.classList.add(\"project-title\");\n  projectEl.setAttribute(\"data-id\", project.id);\n  projectTitle.textContent = project.name;\n\n  const { wrapper, menu } = dropUpDOM(actionImg);\n\n  const deleteProjectBtn = document.createElement(\"button\");\n  const editProjectBtn = document.createElement(\"button\");\n  deleteProjectBtn.classList.add(\"deleteProject\");\n  editProjectBtn.classList.add(\"editProject\");\n  editProjectBtn.textContent = \"Edit\";\n  deleteProjectBtn.textContent = \"Delete\"; \n\n  menu.appendChild(editProjectBtn);\n  menu.appendChild(deleteProjectBtn);\n\n  projectEl.appendChild(projectTitle);\n  projectEl.appendChild(wrapper);\n\n  projectContainer.appendChild(projectEl);\n\n  jumpToProject(projectEl, projectTitle.textContent);\n  showLatestProject(projectEl);\n};\n\nexport function getProjectValue(projectId) {\n  const project = projectArr.find(p => p.id === Number(projectId));\n  const name = project.name;\n  return name;\n};\n\nexport function getTaskValues(taskId) {\n  const task = taskArr.find(task => task.id === taskId);\n  const { title, description, date, priority, path } = task;\n  \n  return {\n    title, description, date, priority, path\n  };\n};\n\n// Display task UI\nexport function displayTask(task) {\n  const taskEl = document.createElement(\"div\");\n  const infoWrapper = document.createElement(\"div\");\n  const deleteTaskBtn = document.createElement(\"button\");\n  const editTaskBtn = document.createElement(\"button\");\n  const checkBox = document.createElement(\"input\");\n  const span = document.createElement(\"span\");\n  const leftSideTask = document.createElement(\"div\");\n  const rightSideTask = document.createElement(\"div\");\n\n  const taskTitle = document.createElement(\"div\");\n  const dateText = document.createElement(\"div\");\n  const priorityText = document.createElement(\"div\");\n\n  checkBox.type = \"checkbox\";\n  checkBox.name = \"task\";\n\n  checkBox.classList.add(\"checkTask\");\n  deleteTaskBtn.classList.add(\"deleteTask\");\n  editTaskBtn.classList.add(\"editTask\");\n  span.classList.add(\"custom-checkbox\");\n\n  leftSideTask.classList.add(\"left-task\");\n  rightSideTask.classList.add(\"right-task\");\n\n  infoWrapper.classList.add(\"wrap-content\");\n  taskEl.classList.add(\"task\");\n  taskTitle.classList.add(\"task-title\");\n  dateText.classList.add(\"date\");\n  priorityText.classList.add(\"priority\");\n\n  taskEl.setAttribute(\"data-id\", task.id);\n\n  dateText.textContent = task.date;\n  taskTitle.textContent = task.title;\n  priorityText.textContent = task.priority;\n\n  const { wrapper, menu } = dropUpDOM(actionImgDark);\n\n  deleteTaskBtn.textContent = \"Delete\";    // Temporary\n  editTaskBtn.textContent = \"Edit\"; \n\n  menu.appendChild(editTaskBtn);\n  menu.appendChild(deleteTaskBtn);\n\n  leftSideTask.appendChild(checkBox);\n  leftSideTask.appendChild(span);\n  leftSideTask.appendChild(taskTitle);\n\n  rightSideTask.appendChild(priorityText);\n  rightSideTask.appendChild(wrapper);\n\n  infoWrapper.appendChild(leftSideTask);\n  infoWrapper.appendChild(dateText);\n  infoWrapper.appendChild(rightSideTask);\n\n  taskEl.appendChild(infoWrapper);\n  taskContainer.appendChild(taskEl);\n  stylePastDueDate(dateText, taskEl);\n  stylePriority(priorityText, taskEl);\n  showLatestTask(taskEl);\n};\n\n// Scroll into latest task and task button, if the task container if overfilled\nfunction showLatestTask(taskElement) {\n  taskContainer.appendChild(taskElement);\n\n  taskElement.scrollIntoView({behavior: \"smooth\", block: \"end\"});\n  const clickTask = document.querySelector(\"#clickTask\");\n  clickTask.scrollIntoView({behavior: \"smooth\", block: \"end\"});\n};\n\nfunction showLatestProject(projectElement) {\n  projectContainer.appendChild(projectElement);\n\n  projectElement.scrollIntoView({behavior: \"smooth\", block: \"end\"});\n};\n\nfunction stylePastDueDate(dateText, taskElement) {\n  if (taskElement) {\n    if (dateText.textContent === \"Past Due\") {\n      dateText.classList.add(\"stylePastDue\");\n    } else {\n      dateText.classList.remove(\"stylePastDue\");\n    };\n  };\n};\n\n// Style priority based on selection\nfunction stylePriority(priorityText, taskEl) {\n  if (taskEl) {\n    switch (priorityText.textContent) {\n      case(\"High\"):\n        priorityText.style.backgroundColor = \"rgba(251, 2, 2, 0.388)\";\n        break;\n      case(\"Medium\"):\n        priorityText.style.backgroundColor = \"rgba(255, 153, 0, 0.388)\";\n        break;\n      case(\"Low\"):\n        priorityText.style.backgroundColor = \"rgba(98, 255, 0, 0.388)\";\n        break;\n    };\n  };\n};\n\n// Update project and task dom based on editing\nexport function updateProjectDOM(title, projectID) {\n  const projectElement = document.querySelector(`div.project[data-id=\"${projectID}\"]`);   // Retrieve unique id from dynamically created project\n  const projectName = projectElement.querySelector(\"div.project div.project-title\");  \n\n  projectName.textContent = title;\n};\n\nexport function updateTaskDOM(title, date, priority, taskID) {\n  const taskElement = document.querySelector(`div.task[data-id=\"${taskID}\"]`);            // Retrieve unique id from dynamically created task\n  const taskName = taskElement.querySelector(\"div.task-title\");\n  const dateText = taskElement.querySelector(\"div.date\");\n  const priorityText = taskElement.querySelector(\"div.priority\");\n  taskName.textContent = title;\n  dateText.textContent = date;\n  priorityText.textContent = priority;\n\n  stylePastDueDate(dateText, taskElement);\n  stylePriority(priorityText, taskElement);\n};\n\n// Highlight the selected project/sidebar section (Temporary)\nexport function highlightItem(selectedItem) {\n  const items = document.querySelectorAll(\".project, li\");\n  items.forEach(item => item.classList.remove(\"item-highlight\"));\n  selectedItem.classList.add(\"item-highlight\");\n};\n\nexport function getSectionTitle(title) {\n  const sectionTitle = document.querySelector(\"div#section-title\");\n  sectionTitle.textContent = title;\n};\n\n// Render the project that was recently created\nexport function jumpToProject(project, projectName) {\n  highlightItem(project);\n  getSectionTitle(projectName);\n  renderProjectTasks(project);\n  showTaskBtn();\n};\n\nfunction dropUpDOM(img) {\n  const imgAction = document.createElement(\"img\");\n  imgAction.src = img;\n  imgAction.classList.add(\"action-img\");\n\n  const dropUpWrapper = document.createElement(\"div\");\n  const toggleBtn = document.createElement(\"button\");\n  const dropUpMenu = document.createElement(\"div\");\n\n  dropUpWrapper.classList.add(\"drop-up-wrapper\");\n  toggleBtn.classList.add(\"btn-drop-up-toggle\");\n  toggleBtn.id = \"drop-up-menu-btn\";\n  dropUpMenu.classList.add(\"drop-up-menu\");\n\n  toggleBtn.setAttribute(\"type\", \"button\");\n  toggleBtn.setAttribute(\"data-toggle\", \"dropdown\");\n  toggleBtn.setAttribute(\"aria-expanded\", \"false\");\n\n  toggleBtn.appendChild(imgAction);\n  dropUpWrapper.appendChild(toggleBtn);\n  dropUpWrapper.appendChild(dropUpMenu);\n\n  return { wrapper: dropUpWrapper, menu: dropUpMenu };\n};\n\n// Drop Up Menu \nexport function dropUpMenuHandler(container, e) {\n  const toggleBtn = e.target.closest(\".btn-drop-up-toggle\");\n\n  if (toggleBtn) {\n    const item = toggleBtn.closest(\".project, .task\"); // Works for both project and task\n\n    if (item) {\n      const dropUpMenu = item.querySelector(\".drop-up-menu\");\n      const isExpanded = toggleBtn.getAttribute(\"aria-expanded\") === \"true\";\n\n      // Avoid menu overlaps by closing others\n      const allDropUpMenus = container.querySelectorAll(\".drop-up-menu\");\n      allDropUpMenus.forEach(menu => {\n        if (menu !== dropUpMenu) {\n          menu.style.display = \"none\";\n          const otherToggleBtn = menu.previousElementSibling;\n          if (otherToggleBtn) {\n            otherToggleBtn.setAttribute(\"aria-expanded\", \"false\");\n          };\n        };\n      });\n\n      // Toggle the visibility of the current drop-up menu\n      toggleBtn.setAttribute(\"aria-expanded\", !isExpanded);\n      dropUpMenu.style.display = isExpanded ? \"none\" : \"flex\";\n      e.stopPropagation();\n    };\n  } else {\n    // Close all menus if clicking outside of the toggle button\n    hideMenu(container);\n  };\n};\n\nexport function handleProjectDropUp() {\n  projectContainer.addEventListener(\"click\", (e) => {\n    dropUpMenuHandler(projectContainer, e);\n  });\n\n  // Close menus when clicking outside of the project menu\n  document.addEventListener(\"click\", (e) => {\n    if (!e.target.closest(\".btn-drop-up-toggle\") && !e.target.closest(\".drop-up-menu\")) {\n      hideMenu(projectContainer);\n    };\n  });\n};\n\nexport function handleTaskDropUp() {\n  taskContainer.addEventListener(\"click\", (e) => {\n    dropUpMenuHandler(taskContainer, e);\n  });\n\n  // Close menus when clicking outside of the project menu\n  document.addEventListener(\"click\", (e) => {\n    if (!e.target.closest(\".btn-drop-up-toggle\") && !e.target.closest(\".drop-up-menu\")) {\n      hideMenu(taskContainer);\n    };\n  });\n};\n\nfunction hideMenu(container) {\n  const openMenus = container.querySelectorAll(\".drop-up-menu\");\n  openMenus.forEach(menu => {\n    menu.style.display = \"none\";\n    const associatedToggleBtn = menu.previousElementSibling;\n    if (associatedToggleBtn) {\n      associatedToggleBtn.setAttribute(\"aria-expanded\", \"false\");\n    };\n  });\n};\n\nexport function sidebarCollapse() {\n  const toggleCheckbox = document.getElementById(\"toggleSidebar\");\n  const sidebar = document.getElementById(\"sidebar\");\n  const header = document.querySelector(\".header-left\");\n  const gridContainer = document.querySelector(\".grid-container\");\n  const svg = document.querySelector(\".ham\");\n\n  const updateSidebar = () => {\n    const isWidthLessThan768 = window.innerWidth <= 768;\n    const isCheckboxChecked = toggleCheckbox.checked;\n\n    if (isWidthLessThan768) {\n      if (isCheckboxChecked) {\n        header.classList.remove(\"collapsed-mobile\");\n        sidebar.classList.remove(\"collapsed-mobile\");\n        svg.classList.add(\"active\");   \n      } else {\n        // Mobile collapse\n        header.classList.add(\"collapsed-mobile\");\n        sidebar.classList.add(\"collapsed-mobile\");\n        svg.classList.remove(\"active\");\n      };\n      sidebar.classList.remove(\"collapsed\");\n      gridContainer.style.removeProperty(\"grid-template-columns\");\n    } else {\n      // If greater than 768px\n      if (isCheckboxChecked) {\n        sidebar.classList.add(\"collapsed\");\n        gridContainer.style.gridTemplateColumns = \"110px repeat(2, minmax(280px, 1fr))\";\n        svg.classList.remove(\"active\");\n      } else {\n        sidebar.classList.remove(\"collapsed\");\n        gridContainer.style.gridTemplateColumns = \"var(--sidebar-width) repeat(2, minmax(280px, 1fr))\";\n        svg.classList.add(\"active\");\n      };\n      header.classList.remove(\"collapsed-mobile\");\n      sidebar.classList.remove(\"collapsed-mobile\");\n    };\n  };\n\n  toggleCheckbox.addEventListener(\"change\", updateSidebar);\n  // Set up event listeners\n  window.addEventListener(\"resize\", updateSidebar);\n  // Initial check to set the correct state based on the checkbox's default state\n  updateSidebar();\n};\n","// Module for rendering the filtered tasks by project selection\n\nimport { displayTask } from \"./dom.js\";\nimport { taskArr } from \"./tasks.js\";\n\n// Handle filtered tasks associated with project/inbox\nexport function renderTaskByID(item) {\n  const itemID = item.getAttribute(\"data-id\");\n  const filteredTasks = taskArr.filter(task => task.projectID === Number(itemID));     \n\n  // Clear each task UI before displaying required tasks\n  const tasks = document.querySelectorAll(\".task\");\n  tasks.forEach(task => task.remove());\n \n  // Show tasks associated with the project/Inbox\n  filteredTasks.forEach(task => {\n    displayTask(task);\n  });\n};\n\n// Render tasks with the project/inbox click\nexport function renderProjectTasks(projectItem) {\n  renderTaskByID(projectItem);\n};\n\nexport function renderInboxTasks() {\n  const inboxItem = document.querySelector(\"li.inbox\");\n  inboxItem.dataset.id = 0;  // Set \"Inbox\" list item to id = 0\n  renderTaskByID(inboxItem);\n};\n","// Module for handling projects\n\nimport { displayProject, updateProjectDOM, updateSelectOptions, getSectionTitle } from \"./dom.js\";\nimport { taskArr } from \"./tasks.js\";\n\nexport const projectArr = JSON.parse(localStorage.getItem(\"projects\")) || [];\n\n// Track project ID from local storage\nfunction getID() {\n  return projectArr.length > 0 ? Math.max(...projectArr.map(p => p.id)) + 1 : 0;\n};\nclass Project {\n  constructor(name) {\n    this.name = name;                \n    this.items = [];        // Create empty array for a project to store each associated task\n    this.id = getID();\n  };\n\n  addTask(task) {\n    this.items.push(task);\n  };\n};\n\nexport function createProject(title) {\n  const projectObj = new Project(title);\n  projectArr.push(projectObj);\n  localStorage.setItem(\"projects\", JSON.stringify(projectArr));\n  \n  return projectObj; \n};\n\n// Add task to project/inbox path\nexport function checkProject(projectID, task) {\n  const project = projectArr.find(project => project.id === Number(projectID));\n\n  if (project) {\n    project.addTask(task);\n  } else { \n    // Add task to \"Inbox\" path if no project has been created\n    const inbox = projectArr.find(project => project.id === 0);\n    if (inbox) {\n      inbox.addTask(task);\n    };\n  };\n  localStorage.setItem(\"projects\", JSON.stringify(projectArr));\n};\n\nexport function deleteProject(item) {\n  const projectUI = item.closest(\".project\");\n  const projectId = projectUI.getAttribute(\"data-id\");\n  const index = projectArr.findIndex(i => i.id === Number(projectId));\n\n  const filteredTasks = taskArr.filter(task => task.projectID === Number(projectId));\n\n  filteredTasks.forEach(taskToDelete => {\n    const taskIndex = taskArr.findIndex(task => task.id === taskToDelete.id);\n    const taskElements = document.querySelectorAll('div.task');\n    const taskElement = Array.from(taskElements).find(el => \n      el.querySelector('.task-title').textContent === taskToDelete.title &&\n      el.querySelector('.date').textContent === taskToDelete.date &&\n      el.querySelector('.priority').textContent === taskToDelete.priority\n    );\n\n    if (taskElement) {\n      taskElement.remove();  \n    };\n    taskArr.splice(taskIndex, 1);\n  });\n\n  projectArr.splice(index, 1);\n  projectUI.remove();\n\n  localStorage.setItem(\"projects\", JSON.stringify(projectArr));\n  localStorage.setItem(\"tasks\", JSON.stringify(taskArr));\n};\n\nexport function editProject(title, projectID) {\n  const index = projectArr.findIndex(project => project.id === Number(projectID));   \n  const project = projectArr[index];\n\n  project.name = title; \n  getSectionTitle(title);\n\n  // Update path of task within project storage\n  project.items.forEach(task => {\n    if (task.projectID === project.id) {\n      task.path = title;\n    };\n  });\n\n  // Update path of task within task storage\n  taskArr.forEach(task => {\n    if (task.projectID === project.id) {\n      task.path = title;\n    };\n  });\n  \n  localStorage.setItem(\"projects\", JSON.stringify(projectArr));\n  localStorage.setItem(\"tasks\", JSON.stringify(taskArr));\n  updateProjectDOM(title, projectID);  \n};\n\n// Load all projects that have been created, after browser refresh\nexport function loadProjects() {\n  const storedProjects = JSON.parse(localStorage.getItem(\"projects\")) || [];\n\n  projectArr.length = 0;  // Prevent duplication\n\n  // Load default \"Inbox\" (only in storage) only once after browser refresh\n  if (!storedProjects.some(project => project.id === 0)) {\n    createProject(\"Inbox\");\n  };\n\n  // Recreate project instances in order to use properties/methods after refresh\n  storedProjects.forEach(projectData => {\n    const project = Object.assign(new Project(), projectData);\n    projectArr.push(project);\n  \n    // Ignore the display of default \"Inbox\"\n    if (projectData.id !== 0) {\n      displayProject(project); \n    };\n  });\n\n  // On refresh, update path input options\n  updateSelectOptions();\n};","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addDays} function options.\n */\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n * @param options - An object with options\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n\n  // If 0 days, no-op to avoid changing times in the hour before end of DST\n  if (!amount) return _date;\n\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","// Module for rendering the filtered tasks by date\n\nimport { displayTask } from \"./dom.js\";\nimport { taskArr } from \"./tasks.js\";\nimport { format, startOfWeek, endOfWeek, addDays } from \"date-fns\";\n\n// Display tasks that match selected date input\nexport function renderTaskByDate(dates) {\n  const tasks = document.querySelectorAll(\".task\");\n  tasks.forEach(task => task.remove());   \n\n  // Check if it passes date as a string or array\n  const dateArr = Array.isArray(dates) ? dates : [dates]; \n  \n  // For each date, check if it matches with user's date selection (exclude Past Due tasks)\n  dateArr.forEach(date => {\n    const filterDate = taskArr.filter(task => task.date === date && task.date !== \"Past Due\");\n    filterDate.forEach(task => {\n      displayTask(task);\n    });\n  });\n};\n\n// Get today's tasks\nexport function renderTodayTasks() {\n  const today = format(new Date(), \"yyyy-MM-dd\");\n  renderTaskByDate(today);\n};\n\n// Get tomorrow's tasks\nexport function renderTomorrowTasks() {\n  const currentDate = new Date();\n  const tomorrow = format(currentDate.setDate(currentDate.getDate() + 1), \"yyyy-MM-dd\");\n  renderTaskByDate(tomorrow);\n};\n\n// Get this week's tasks\nexport function renderThisWeekTasks() {\n  const thisWeekArr = [];\n  const currentDate = new Date();\n\n  // Start week on Monday, and end on Sunday\n  const startWeek = startOfWeek(currentDate, { weekStartsOn: 1 });\n  const endWeek = endOfWeek(currentDate, { weekStartsOn: 1 }); \n\n  // Get array of dates from the current week\n  for (let i = startWeek; i <= endWeek; i = addDays(i, 1)) {\n    thisWeekArr.push(format(i, \"yyyy-MM-dd\"));\n  };\n  renderTaskByDate(thisWeekArr);\n};\n\n// Get tasks that have due date longer than the current week\nexport function renderUpcomingTasks() {\n  const upcomingArr = [];\n  const currentDate = new Date();\n  const endWeek = endOfWeek(currentDate, { weekStartsOn: 1 }); \n\n  taskArr.forEach(task => {\n    if (task.date > format(endWeek, \"yyyy-MM-dd\")) {\n      upcomingArr.push(task.date);\n    };\n  });\n  renderTaskByDate(upcomingArr);\n};\n\n// Fetch dated tasks from date sections\nexport function assignDatedTasks() {\n  const sectionList = document.querySelectorAll(\"li:not(:first-child):not(:last-child)\");\n  sectionList.forEach(li => {\n    if (li.classList.contains(\"item-highlight\")) {\n      switch (li.textContent) {\n        case \"Today\":\n          renderTodayTasks();\n          break;\n        case \"Tomorrow\":\n          renderTomorrowTasks();\n          break;\n        case \"This Week\":\n          renderThisWeekTasks();\n          break;\n        case \"Upcoming\":\n          renderUpcomingTasks();\n          break;\n      };\n    };\n  });\n};\n\n// Assign today's date as min attribute for date picker\nfunction setMinDate() {\n  const inputDate = document.querySelector(\"dialog.task-dialog input#date\");\n\n  const currentDate = format(new Date(), \"yyyy-MM-dd\");\n  inputDate.setAttribute(\"min\", currentDate);\n};\ndocument.addEventListener(\"DOMContentLoaded\", setMinDate);\n\n// Check if the task is past due \nexport function checkIfPastDue() {\n  const currentDate = format(new Date(), \"yyyy-MM-dd\");\n\n  taskArr.forEach(task => {\n    if (!task.hasOwnProperty(\"isOverdue\")) {\n      task.isOverdue = false; // Set default property to false\n    };\n\n    // Check if the task is past due\n    if (task.date < currentDate) {\n      const taskElement = document.querySelector(`div.task[data-id=\"${task.id}\"]`);\n\n      task.isOverdue = true; \n      task.date = \"Past Due\"; // Updates after page is refreshed \n      \n      // Updates real time\n      if (taskElement) {\n        const name = taskElement.querySelector(\"div.date\");\n        name.textContent = \"Past Due\";\n        name.classList.add(\"stylePastDue\");\n\n        const currentSection = document.querySelector(\".item-highlight\");\n        // Remove task UI in real time from currently selected section (except \"Inbox\") if task's date is past due\n        if (currentSection) {\n          taskElement.remove();\n        };\n      };\n    };\n  });\n\n  localStorage.setItem(\"tasks\", JSON.stringify(taskArr));\n};\n\n// Check for past due dates every 1 minute\nsetInterval(checkIfPastDue, 60000);","// Module for handling eventListeners \n\nimport { createProject, deleteProject, editProject } from \"./projects.js\";\nimport { createTask, deleteTask, editTask, markAsCompleteTask } from \"./tasks.js\";\nimport { updateSelectOptions, displayProject, projectContainer, \n         taskContainer, getProjectValue, getTaskValues, \n         handleProjectDropUp, handleTaskDropUp } from \"./dom.js\";\nimport { renderTaskByID } from \"./projectRender.js\";\nimport { assignDatedTasks } from \"./datesRender.js\";\nimport { format } from \"date-fns\";\n\n// 'Project' interactive elements\nconst clickProjectBtn = document.querySelector(\"button#clickProject\"); // Create project btn variable (no modal)\nconst projectInput = document.querySelector(\"dialog.project-dialog input#projectName\");\nconst btnProject = document.querySelector(\"dialog.project-dialog button#createProject\");\nconst projectDialog = document.querySelector(\"dialog.project-dialog\");\n\n// 'Task' interactive elements\nconst clickTaskBtn = document.querySelector(\"button#clickTask\"); // Create task btn variable (no modal)\nconst btnTask = document.querySelector(\"dialog.task-dialog button#createTask\");\nconst taskInput = document.querySelector(\"dialog.task-dialog input#taskName\");\nconst descriptionText = document.querySelector(\"dialog.task-dialog textarea#description\");\nconst inputDate = document.querySelector(\"dialog.task-dialog input#date\");\nconst selectPath = document.querySelector(\"select#path\");\nconst selectPriority = document.querySelector(\"dialog.task-dialog select#priority\");\nconst taskDialog = document.querySelector(\"dialog.task-dialog\");\n\nlet isEditMode = false;\nlet projectId = null;\nlet editingTaskId = null;\n\n// Create/Edit project modal btn event\nfunction addProject() {\n  btnProject.addEventListener(\"click\", (e) => {\n    const projectForm = document.querySelector(\"form.project-form\");\n    \n    if (!projectForm.checkValidity()) return; // Early exit if form is not valid\n    e.preventDefault();\n\n    const projectName = projectInput.value; \n \n    if (isEditMode) {\n      editProject(projectName, projectId);\n    } else {\n      const newProject = createProject(projectName);\n      displayProject(newProject);\n\n      localStorage.setItem(\"selectedProjectID\", newProject.id);\n    };\n\n    localStorage.setItem(\"selectedProject\", projectName);\n    closeDialog(projectDialog);\n    resetForm(\"Project\");\n    updateSelectOptions();\n  });\n};\n\nfunction removeProjectEvent() {\n  projectContainer.addEventListener(\"click\", (e) => {\n    if (e.target && e.target.classList.contains(\"deleteProject\")) {\n      deleteProject(e.target);\n      updateSelectOptions();\n    };\n  });\n};\n\n// // Edit project btn (no modal) \nfunction editProjectEvent() {\n  projectContainer.addEventListener(\"click\", (e) => {\n    if (e.target && e.target.classList.contains(\"editProject\")) {\n      const project = e.target.closest('.project');\n      if (project) {\n        showDialog(\"Project\");\n        isEditMode = editMode(btnProject, isEditMode);\n        projectId = project.getAttribute(\"data-id\");\n        \n        // Fetch the name of the project in input field\n        projectInput.value = getProjectValue(projectId);\n      };\n    };\n  });\n};\n\n// Create/Edit task modal btn event\nfunction addTask() {\n  btnTask.addEventListener(\"click\", (e) => {\n    const taskForm = document.querySelector(\"form.task-form\");\n\n    if (!taskForm.checkValidity()) return;\n    e.preventDefault();\n\n    const taskName = taskInput.value;\n    const description = descriptionText.value;\n    const date = inputDate.value;\n    const priority = selectPriority.value;\n    const path = selectPath.value;\n    const projectID = selectPath.selectedOptions[0].id;\n\n    if (isEditMode && editingTaskId !== null) {\n      editTask(taskName, description, date, priority, path, projectID, editingTaskId);\n    } else {\n      createTask(taskName, description, date, priority, path, projectID);\n      \n      // Assign task's UI to certain path on click\n      const currentProject = document.querySelector(`[data-id=\"${projectID}\"]`);\n\n      if (projectID) {\n        if (currentProject && currentProject.classList.contains(\"item-highlight\")) {\n          renderTaskByID(currentProject);\n        };\n      };\n      // Assign task's UI to certain date section on click\n      assignDatedTasks();\n    };\n\n    closeDialog(taskDialog);\n    resetForm(\"Task\");  \n  });\n};\n\nfunction removeTaskEvent() {\n  taskContainer.addEventListener(\"click\", (e) => {\n    if (e.target && e.target.classList.contains(\"deleteTask\")) {\n      deleteTask(e.target);\n    };\n  });\n};\n\n// Edit task btn (no modal) \nfunction editTaskEvent() {\n  taskContainer.addEventListener(\"click\", (e) => {\n    if (e.target && e.target.classList.contains(\"editTask\")) {\n      const task = e.target.closest(\".task\");\n      if (task) {\n        editingTaskId = Number(task.dataset.id); // Set the task ID for editing\n        showDialog(\"Task\");\n        isEditMode = editMode(btnTask, isEditMode);\n\n        // Fetch the task values\n        const taskValues = getTaskValues(editingTaskId);\n\n        if (taskValues) {\n          taskInput.value = taskValues.title;\n          descriptionText.value = taskValues.description;\n          inputDate.value = taskValues.date;\n          selectPriority.value = taskValues.priority;\n          defaultPath();\n        }; \n      };\n    };\n  });\n};\n\n// Handle checkbox event\nfunction markTaskEvent() {\n  taskContainer.addEventListener(\"click\", (e) => {\n    const customCheckbox = e.target.closest(\".custom-checkbox\");\n    // If custom checkbox clicked\n    if (customCheckbox) {\n      // Look for native checkbox\n      const checkbox = customCheckbox.parentNode.querySelector(\".checkTask\");\n\n      if (checkbox) {\n        checkbox.checked = !checkbox.checked; // Toggle the checkbox\n        markAsCompleteTask(checkbox); \n      };\n    };\n  });\n};\n\nexport function handleProjectEvents() {\n  addProject();\n  handleProjectDropUp();\n  removeProjectEvent();\n  editProjectEvent();\n};\n\nexport function handleTaskEvents() {\n  addTask();\n  handleTaskDropUp();\n  removeTaskEvent();\n  editTaskEvent();\n  markTaskEvent();\n};\n\nfunction closeDialog(element) {\n  element.close();\n};\n\n// Handle modal cancel\nexport function cancelDialog() {\n  const cancelBtn = document.querySelectorAll(\"button.cancel\");\n  cancelBtn.forEach((btn) => {\n    btn.addEventListener(\"click\", () => {\n      closeDialog(projectDialog);\n      closeDialog(taskDialog);\n      resetForm();\n      clearInputs();\n    });\n  });\n};\n\nfunction showDialog(str) {\n  if (str === \"Project\") {\n    projectDialog.showModal();\n  } else if (str === \"Task\") {\n    taskDialog.showModal();\n  };\n};\n\n// Show Modal once starter button is pressed\nexport function handleDialogEvent() {\n  clickProjectBtn.addEventListener(\"click\", () => {\n    clearInputs();\n    showDialog(\"Project\");\n  });\n  clickTaskBtn.addEventListener(\"click\", () => {\n    clearInputs();\n    showDialog(\"Task\");\n    defaultPath();  // Assign path in select input based on currently selected project\n    defaultDate();  // Assign date in input based on \"Today\"/\"Tomorrow\" sections\n  });\n};\n\nfunction defaultPath() {\n  const currentProject = document.querySelector(\".item-highlight\");\n  if (currentProject) {\n    const projectID = currentProject.getAttribute(\"data-id\");\n    const selectPath = document.querySelector(\"dialog.task-dialog select#path\");\n\n    // Handle project duplicate names\n    const optionToSelect = Array.from(selectPath.options).find(option => \n      option.id === projectID\n    );\n    if (optionToSelect) {\n      selectPath.value = optionToSelect.value; \n      selectPath.selectedIndex = optionToSelect.index;\n    };\n  };\n};\n\nfunction defaultDate() {\n  const sectionList = document.querySelectorAll(\"li:not(:first-child):not(:last-child)\");\n  const dateSection = Array.from(sectionList).filter(item => item.classList.contains(\"item-highlight\"));\n  const inboxSection = document.querySelector(\"li.inbox\");\n\n  dateSection.forEach(item => {\n    switch (item.textContent) {\n      case \"Today\":\n        inputDate.value = format(new Date(), \"yyyy-MM-dd\");\n        break;\n      case \"Tomorrow\":\n        const tomorrow = new Date();\n        tomorrow.setDate(tomorrow.getDate() + 1);\n        inputDate.value = format(tomorrow, \"yyyy-MM-dd\");\n        break;\n    };\n  });\n  if (inboxSection.classList.contains(\"item-highlight\")) {\n    inputDate.value = format(new Date(), \"yyyy-MM-dd\");\n  };\n};\n\nfunction resetForm(str) {\n  isEditMode = false;\n  projectId = null;\n  btnProject.textContent = (str === \"Project\" || !str) ? \"Create Project\" : btnProject.textContent;\n  btnTask.textContent = (str === \"Task\" || !str) ? \"Create Task\" : btnTask.textContent;\n};\n\nfunction clearInputs() {\n  projectInput.value = \"\";\n  taskInput.value = \"\";\n  descriptionText.value = \"\";\n  inputDate.value = \"\";\n  selectPriority.value = \"\";\n  selectPath.value = \"Inbox\";\n};\n\nfunction editMode(btn, mode) {\n  if (btn) {\n    btn.textContent = \"Edit\";\n    return true;\n  };\n  return mode;\n};\n","// Module for navigating through list items and projects\n\nimport { renderInboxTasks, renderProjectTasks } from \"./projectRender.js\";\nimport { renderTodayTasks, renderTomorrowTasks, renderThisWeekTasks, renderUpcomingTasks } from \"./datesRender.js\";\nimport { renderCompletedTasks } from \"./completedTasksRender.js\";\nimport { highlightItem, projectContainer, showTaskBtn, getSectionTitle, jumpToProject } from \"./dom.js\";\n\nconst sections = {\n  \"Inbox\": () => renderInboxTasks(),\n  \"Today\": () => renderTodayTasks(),\n  \"Tomorrow\": () => renderTomorrowTasks(),\n  \"This Week\": () => renderThisWeekTasks(),\n  \"Upcoming\": () => renderUpcomingTasks(),\n  \"Completed\": () => renderCompletedTasks(),\n};\n\nfunction renderSection(sectionName, item) {\n  if (sectionName) {\n    if (sections[sectionName]) {\n      sections[sectionName]();\n      highlightItem(item);\n      getSectionTitle(sectionName);\n    }; \n  };\n};\n\nexport function listItemClick() {\n  const lists = document.querySelectorAll(\"li\");\n  // First load = render 'Inbox' section. With subsequent loads, render the last clicked section\n  window.addEventListener(\"DOMContentLoaded\", () => {\n    const savedSection = localStorage.getItem(\"selectedSection\") || \"Inbox\"; // Store clicked section in the storage\n    const savedProjectName = localStorage.getItem(\"selectedProject\");\n    const savedProjectID = localStorage.getItem(\"selectedProjectID\");\n\n    const sectionToRender = Array.from(lists).find(list => list.textContent === savedSection) || lists[0];\n    if (sectionToRender) {\n      renderSection(savedSection, sectionToRender);\n    };\n\n    // Highlight the project that was clicked previously \n    // Use projectID storage to associate with projects with same names after page reload (selects the right project ... \n    // .. even when project names are the same)\n    if (savedProjectID) {\n      const projectElement = document.querySelector(`.project[data-id=\"${savedProjectID}\"]`);\n\n      if (projectElement) {\n        highlightItem(projectElement);\n        getSectionTitle(savedProjectName);\n        renderProjectTasks(projectElement); \n        showTaskBtn();\n      };\n    };\n  });\n  \n  // If the section li item is clicked, render that section with tasks\n  lists.forEach(list => {\n    list.addEventListener(\"click\", (e) => {\n      const sectionName = e.currentTarget.textContent;\n      const item = e.currentTarget;\n  \n      renderSection(sectionName, item);\n      if (sectionName !== \"Completed\") showTaskBtn();\n\n      localStorage.setItem(\"selectedSection\", sectionName);\n      localStorage.removeItem(\"selectedProjectID\");\n      localStorage.removeItem(\"selectedProject\"); \n    });\n  });\n};\n\n// Render the tasks on the selected project\nexport function projectClick() {\n  projectContainer.addEventListener(\"click\", (e) => {\n    // Select that project if project element or action btn is clicked\n    if (e.target && (e.target.classList.contains(\"project\") || e.target.closest(\".btn-drop-up-toggle\") \n                                                            || e.target.classList.contains(\"project-title\"))) {\n      const project = e.target.closest(\".project\");\n      const projectID = project.getAttribute(\"data-id\");\n      const projectName = project.querySelector(\".project-title\").textContent;\n      \n      if (project) {\n        jumpToProject(project, projectName);\n        localStorage.setItem(\"selectedProject\", projectName);\n        localStorage.setItem(\"selectedProjectID\", projectID);\n        localStorage.removeItem(\"selectedSection\");\n      };\n    // Jump to Inbox section if the selected project is deleted\n    } else if (!document.querySelector(\"#clickProject\").contains(e.target)) {\n      const inbox = Array.from(document.querySelectorAll(\"li\")).find(list => list.textContent === \"Inbox\");\n      const highlight = document.querySelector(\".item-highlight\");\n\n      // Jump to \"Inbox\" only if in the project section\n      if (inbox && !highlight) {\n        renderSection(\"Inbox\", inbox);\n        localStorage.setItem(\"selectedSection\", \"Inbox\");\n      };\n    };\n  });\n};\n","// Module for rendering all the tasks that have been checked/marked as complete\n\nimport { completedArr } from \"./tasks.js\";\nimport { displayTask, modifyTaskFeatures, taskContainer} from \"./dom.js\";\n\nexport function renderCompletedTasks() {\n  const contentWrapper = document.querySelector(\".content-wrapper\");\n\n  // Remove tasks from 'Completed' section that haven't been checked yet\n  const tasks = document.querySelectorAll(\".task\");\n  tasks.forEach(task => task.remove());\n\n  completedArr.forEach(task => {\n    displayTask(task);\n  });\n  \n  // Check if completed section has a task and 'delete all' button\n  contentWrapper.addEventListener(\"click\", (e) => {\n    if (e.target && e.target.classList.contains(\"deleteAll\")) {\n      if (taskContainer.querySelector(\".task\")) {\n        const tasks = document.querySelectorAll(\".task\");\n        tasks.forEach(task => task.remove());\n        completedArr.length = 0;\n      };\n    // Remove all completed tasks from its storage, if 'delete all' is clicked\n    localStorage.setItem(\"completed\", JSON.stringify(completedArr));\n    };\n  });\n  // Modify task features if in 'Completed' section\n  modifyTaskFeatures();\n};\n","// Module for initializing the app \n\nimport { handleProjectEvents, handleTaskEvents, handleDialogEvent, cancelDialog } from \"./events.js\";\nimport { loadProjects } from \"./projects.js\";\nimport { loadTasks } from \"./tasks.js\";\nimport { listItemClick, projectClick } from \"./navigation.js\";\nimport { checkIfPastDue } from \"./datesRender.js\";\nimport { sidebarCollapse } from \"./dom.js\";\n\n// Initialize\nexport function init() {\n  sidebarCollapse();\n  checkIfPastDue();\n  loadTasks();\n  loadProjects();\n\n  handleDialogEvent();\n  cancelDialog();\n  \n  handleProjectEvents();\n  handleTaskEvents();\n  \n  listItemClick();\n  projectClick();\n};\n\n","import \"./styles/styles.css\";\n\nimport { init } from \"./modules/initialize.js\";\n\n// Initialize the application \ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  init();\n});\n\n\n\n\n\n           /*⣤⣤⣤⣤⣤⣶⣦⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀ \n⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⡿⠛⠉⠙⠛⠛⠛⠛⠻⢿⣿⣷⣤⡀⠀⠀⠀⠀⠀ \n⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⠋⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⠈⢻⣿⣿⡄⠀⠀⠀⠀ \n⠀⠀⠀⠀⠀⠀⠀⣸⣿⡏⠀⠀⠀⣠⣶⣾⣿⣿⣿⠿⠿⠿⢿⣿⣿⣿⣄⠀⠀⠀ \n⠀⠀⠀⠀⠀⠀⠀⣿⣿⠁⠀⠀⢰⣿⣿⣯⠁⠀⠀⠀⠀⠀⠀⠀⠈⠙⢿⣷⡄⠀ \n⠀⠀⣀⣤⣴⣶⣶⣿⡟⠀⠀⠀⢸⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣷⠀ \n⠀⢰⣿⡟⠋⠉⣹⣿⡇⠀⠀⠀⠘⣿⣿⣿⣿⣷⣦⣤⣤⣤⣶⣶⣶⣶⣿⣿⣿⠀ \n⠀⢸⣿⡇⠀⠀⣿⣿⡇⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠃⠀ \n⠀⣸⣿⡇⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠉⠻⠿⣿⣿⣿⣿⡿⠿⠿⠛⢻⣿⡇⠀⠀ \n⠀⣿⣿⠁⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣧⠀⠀ \n⠀⣿⣿⠀⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠀⠀ \n⠀⣿⣿⠀⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠀⠀ \n⠀⢿⣿⡆⠀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⠀⠀ \n⠀⠸⣿⣧⡀⠀⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠃⠀⠀ \n⠀⠀⠛⢿⣿⣿⣿⣿⣇⠀⠀⠀⠀⠀⣰⣿⣿⣷⣶⣶⣶⣶⠶⠀⢠⣿⣿⠀⠀⠀ \n⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⣿⣿⡇⠀⣽⣿⡏⠁⠀⠀⢸⣿⡇⠀⠀⠀ \n⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠀⠀⣿⣿⡇⠀⢹⣿⡆⠀⠀⠀⣸⣿⠇⠀⠀⠀ \n⠀⠀⠀⠀⠀⠀⠀⢿⣿⣦⣄⣀⣠⣴⣿⣿⠁⠀⠈⠻⣿⣿⣿⣿⠀*/\n\n\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","taskArr","JSON","parse","localStorage","getItem","completedArr","Task","constructor","title","description","date","priority","path","projectID","id","existingIds","map","task","newId","Math","floor","random","includes","getNextId","isNaN","Number","removeTaskUI","taskID","taskUI","querySelector","remove","editTask","newProjectID","index","findIndex","oldProjectID","oldDate","updateTaskData","li","querySelectorAll","isSectionHighlighted","Array","from","filter","item","classList","contains","isDateSectionHighlighted","isHighlighted","hasProject","newProject","projectArr","find","project","oldProject","name","taskIndexInOldProject","items","t","splice","some","addTask","manageTask","forEach","handleDateChange","taskElement","taskName","dateText","priorityText","textContent","stylePastDueDate","stylePriority","updateTaskDOM","updateTaskUI","setItem","stringify","deleteFromProjectArr","taskObj","projectIndex","projectTaskIndex","renderTaskByID","itemID","getAttribute","filteredTasks","displayTask","renderProjectTasks","projectItem","projectContainer","taskContainer","createTaskBtn","contentWrapper","flexTaskContainer","updateSelectOptions","selectPath","innerHTML","optionElement","createElement","value","appendChild","modifyTaskFeatures","buttons","checkboxes","deleteAllBtn","style","display","add","insertBefore","checkbox","customCheckbox","nextElementSibling","checked","disabled","btn","showTaskBtn","displayProject","projectEl","projectTitle","setAttribute","wrapper","menu","dropUpDOM","deleteProjectBtn","editProjectBtn","projectElement","jumpToProject","scrollIntoView","behavior","block","taskEl","infoWrapper","deleteTaskBtn","editTaskBtn","checkBox","span","leftSideTask","rightSideTask","taskTitle","type","backgroundColor","highlightItem","selectedItem","getSectionTitle","projectName","img","imgAction","dropUpWrapper","toggleBtn","dropUpMenu","dropUpMenuHandler","container","target","closest","isExpanded","otherToggleBtn","previousElementSibling","stopPropagation","hideMenu","associatedToggleBtn","Project","max","push","createProject","projectObj","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","options","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","key","isArray","array","object","Object","prototype","hasOwnProperty","call","findKey","valueCallback","rest","slice","enUS","code","formatDistance","token","count","result","tokenValue","toString","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","weekStartsOn","firstWeekContainsDate","defaultOptions","getDefaultOptions","pow","millisecondsInWeek","constructFromSymbol","Symbol","for","constructFrom","Date","toDate","argument","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","startOfDay","in","setHours","getDayOfYear","laterDate","earlierDate","laterDate_","earlierDate_","dates","normalize","bind","normalizeDates","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","round","differenceInCalendarDays","date_","setFullYear","startOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","y","signedYear","M","d","a","dayPeriodEnumValue","h","H","m","s","S","numberOfDigits","milliseconds","trunc","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","T","offset","delimiter","sign","absOffset","minutes","dateLongFormatter","pattern","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isValid","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","format","formatStr","originalDate","RangeError","parts","substring","firstCharacter","longFormatter","join","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","isProtectedDayOfYearToken","input","_message","subject","message","console","warn","warnOrThrowProtectedError","formatter","matched","endOfWeek","addDays","amount","NaN","renderTaskByDate","renderTodayTasks","renderTomorrowTasks","currentDate","renderThisWeekTasks","thisWeekArr","startWeek","endWeek","renderUpcomingTasks","upcomingArr","checkIfPastDue","isOverdue","addEventListener","inputDate","setInterval","clickProjectBtn","projectInput","btnProject","projectDialog","clickTaskBtn","btnTask","taskInput","descriptionText","selectPriority","taskDialog","isEditMode","projectId","editingTaskId","checkValidity","preventDefault","selectedOptions","inbox","checkProject","createTask","currentProject","closeDialog","resetForm","handleProjectEvents","updateProjectDOM","editProject","projectUI","taskToDelete","taskIndex","taskElements","el","deleteProject","showDialog","editMode","getProjectValue","handleTaskEvents","dataset","deleteTask","taskValues","taskId","getTaskValues","defaultPath","parentNode","setTimeout","markAsCompleteTask","element","close","str","showModal","optionToSelect","option","selectedIndex","clearInputs","mode","sections","inboxItem","renderInboxTasks","renderCompletedTasks","renderSection","sectionName","init","toggleCheckbox","getElementById","sidebar","header","gridContainer","svg","updateSidebar","isWidthLessThan768","innerWidth","isCheckboxChecked","removeProperty","gridTemplateColumns","sidebarCollapse","storedTasks","taskData","assign","loadTasks","storedProjects","projectData","loadProjects","sectionList","dateSection","inboxSection","defaultDate","lists","savedSection","savedProjectName","savedProjectID","sectionToRender","list","currentTarget","removeItem","listItemClick","highlight"],"sourceRoot":""}